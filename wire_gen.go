// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"supply-chain-mall/config"
	"supply-chain-mall/controller"
	"supply-chain-mall/dao"
	"supply-chain-mall/pkg/cache"
	"supply-chain-mall/pkg/client"
	"supply-chain-mall/pkg/core"
	"supply-chain-mall/svc"
)

// Injectors from wire.go:

func NewInjector() (*core.AppProvider, error) {
	engine := controller.NewGinServer()
	configConfig, err := config.Load()
	if err != nil {
		return nil, err
	}
	db := client.NewMySQLClient(configConfig)
	productRepo := dao.NewProductRepo(db)
	redisClient := client.NewRedisClient(configConfig)
	taskCache := cache.NewTaskCache(redisClient)
	productService := &svc.ProductService{
		ProductRepo: productRepo,
		Cache:       taskCache,
	}
	product := &controller.Product{
		ProductSvc: productService,
	}
	controllers := &controller.Controllers{
		Product: product,
	}
	appProvider := &core.AppProvider{
		Engine:      engine,
		Controllers: controllers,
	}
	return appProvider, nil
}

// wire.go:

var ProviderSet = wire.NewSet(config.ProviderSet, controller.ProviderSet, core.ProviderSet, client.ProviderSet, dao.ProviderSet)
